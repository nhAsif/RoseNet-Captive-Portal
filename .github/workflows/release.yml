name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Push events to new tags like v1.0.0

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        include:
          - os: linux
            arch: arm # For 32-bit ARM Linux

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22' # Use a recent Go version

    - name: Build backend
      run: |
        cd backend
        BINARY_NAME="voucher_server"
        if [ "${{ matrix.os }}" = "windows" ]; then
          BINARY_NAME="voucher_server.exe"
        fi
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o $BINARY_NAME
        mv $BINARY_NAME ../ # Move to root of workspace
      shell: bash

    - name: Create release archive
      run: |
        ARCHIVE_NAME="RoseNet-Portal-${{ matrix.os }}-${{ matrix.arch }}.zip"
        # Create a temporary directory to stage files for zipping
        mkdir -p temp_release_dir
        BINARY_NAME="voucher_server"
        if [ "${{ matrix.os }}" = "windows" ]; then
          BINARY_NAME="voucher_server.exe"
        fi
        cp $BINARY_NAME temp_release_dir/
        cp -r frontend temp_release_dir/
        cp scripts/install.sh temp_release_dir/
        # Zip the contents of temp_release_dir
        cd temp_release_dir
        zip -r ../$ARCHIVE_NAME .
        cd ..
        rm -rf temp_release_dir # Clean up temporary directory
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: RoseNet-Portal-${{ matrix.os }}-${{ matrix.arch }}
        path: RoseNet-Portal-${{ matrix.os }}-${{ matrix.arch }}.zip