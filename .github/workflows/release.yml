name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # Push events to new tags like v1.0.0

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
        include:
          - os: linux
            arch: arm # For 32-bit ARM Linux

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22' # Use a recent Go version

    - name: Build backend
      run: |
        cd backend
        BINARY_NAME="voucher_server"
        if [ "${{ matrix.os }}" = "windows" ]; then
          BINARY_NAME="voucher_server.exe"
        fi
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o $BINARY_NAME
        mv $BINARY_NAME ../ # Move to root of workspace
      shell: bash

    - name: Create release archive and checksum
      run: |
        BINARY_NAME="voucher_server"
        if [ "${{ matrix.os }}" = "windows" ]; then
          BINARY_NAME="voucher_server.exe"
        fi

        RELEASE_NAME="RoseNet-Portal-${{ matrix.os }}-${{ matrix.arch }}"
        
        # Create a temporary directory to stage files
        mkdir -p "${RELEASE_NAME}"
        cp "${BINARY_NAME}" "${RELEASE_NAME}/"
        cp -r frontend "${RELEASE_NAME}/"
        cp nodogsplash/nodogsplash.conf "${RELEASE_NAME}/"
        cp LICENSE "${RELEASE_NAME}/"
        
        if [ "${{ matrix.os }}" = "windows" ]; then
          ARCHIVE_NAME="${RELEASE_NAME}.zip"
          zip -r "${ARCHIVE_NAME}" "${RELEASE_NAME}"
        else
          ARCHIVE_NAME="${RELEASE_NAME}.tar.gz"
          tar -czvf "${ARCHIVE_NAME}" "${RELEASE_NAME}"
        fi
        
        # Generate SHA256 checksum
        sha256sum "${ARCHIVE_NAME}" > "${ARCHIVE_NAME}.sha256"
        
        rm -rf "${RELEASE_NAME}" # Clean up temporary directory
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}
        path: |
          RoseNet-Portal-${{ matrix.os }}-${{ matrix.arch }}.*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts
      run: ls -R artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
